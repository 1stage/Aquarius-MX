#Extract Inline Documentation from Assembly Language files

import glob
import sys

source = "*.asm"
docname = "readme.md"

top = ["MX BASIC Documentation", "======================","", "Generated by %s" % sys.argv[0], ""]
doc = {}

for filename in glob.glob(source):
    print("Reading %s" % filename)

    key = ""
    section = []
    blank = True

    line_no = 0
    for line in open(filename):
        line_no += 1
        line = line.rstrip()
        if len(line) < 3: next
        if len(line) > 7:
            if line[:7] == ";;; ## ":
                key = line[7:]
        if line[:3] == ";;;": 
            line = line[4:]
            section.append(line)
            blank = False
            next
        if line[:3] == ";--" and not blank: 
            if key == "": 
               print("No Section Title: %s line %d\n" % (filename % line_no))
               exit(1)
            doc[key] = section
            key = ""
            section = []
            blank = True
     
    if key: doc[key] = section
            
docfile = open(docname,"w")
print("Writing %s" % docname)
for i in top:
    docfile.write(i)
    docfile.write("\n")
keys = list(doc.keys())
keys.sort()
for key in keys:
    text = "\n".join(doc[key])
    docfile.write(text)
    docfile.write("\n\n")
docfile.close()

